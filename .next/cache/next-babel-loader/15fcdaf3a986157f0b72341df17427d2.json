{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport Layout from \"../../components/Layout\";\nimport Campaign from \"../../ethereum/campaign\";\nimport { Card, Grid } from \"semantic-ui-react\";\nimport web3 from \"../../ethereum/web3\";\nimport ContributeForm from \"../../components/ContributeForm\";\n\nvar CampaignShow = /*#__PURE__*/function (_Component) {\n  _inherits(CampaignShow, _Component);\n\n  var _super = _createSuper(CampaignShow);\n\n  function CampaignShow() {\n    _classCallCheck(this, CampaignShow);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(CampaignShow, [{\n    key: \"renderCards\",\n    value: function renderCards() {\n      var _this$props = this.props,\n          balance = _this$props.balance,\n          manager = _this$props.manager,\n          minimumContribution = _this$props.minimumContribution,\n          requestsCount = _this$props.requestsCount,\n          approversCount = _this$props.approversCount;\n      var items = [{\n        header: manager,\n        meta: \"Address of Manager\",\n        description: \"The manager created this campaign and create requests to withdraw money\",\n        style: {\n          overflowWrap: \"break-word\"\n        }\n      }, {\n        header: minimumContribution,\n        meta: \"Minimum Contribution (wei)\",\n        description: \"You must contribute at least this much wei to become an approver\"\n      }, {\n        header: requestsCount,\n        meta: \"Number of Requests\",\n        description: \"A request tries to withdraw money from the contract. Requests must be approved by approvers.\"\n      }, {\n        header: approversCount,\n        meta: \"Number of Approvers\",\n        description: \"Number of people who have already donated to this campaign\"\n      }, {\n        header: web3.utils.fromWei(balance, \"ether\"),\n        meta: \"Campaign Balance (ether)\",\n        description: \"The balance is how much money this campaign has left to spend\"\n      }];\n      return __jsx(Card.Group, {\n        items: items\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(Layout, null, __jsx(\"h3\", null, \"Campaign Show\"), __jsx(Grid, null, __jsx(Grid.Column, null, this.renderCards()), __jsx(Grid.Column, null, __jsx(ContributeForm, null))));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(props) {\n        var campaign, summary;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                campaign = Campaign(props.query.address);\n                _context.next = 3;\n                return campaign.methods.getSummary().call();\n\n              case 3:\n                summary = _context.sent;\n                return _context.abrupt(\"return\", {\n                  minimumContribution: summary[0],\n                  balance: summary[1],\n                  requestsCount: summary[2],\n                  approversCount: summary[3],\n                  manager: summary[4]\n                });\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getInitialProps(_x) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return CampaignShow;\n}(Component);\n\nexport default CampaignShow;","map":{"version":3,"sources":["/home/rlima/Other Projects/Blockchain-Course/kickstart/pages/campaigns/show.js"],"names":["React","Component","Layout","Campaign","Card","Grid","web3","ContributeForm","CampaignShow","props","balance","manager","minimumContribution","requestsCount","approversCount","items","header","meta","description","style","overflowWrap","utils","fromWei","renderCards","campaign","query","address","methods","getSummary","call","summary"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,SAASC,IAAT,EAAeC,IAAf,QAA2B,mBAA3B;AACA,OAAOC,IAAP,MAAiB,qBAAjB;AACA,OAAOC,cAAP,MAA2B,iCAA3B;;IAEMC,Y;;;;;;;;;;;;;kCAeU;AAAA,wBAOR,KAAKC,KAPG;AAAA,UAEVC,OAFU,eAEVA,OAFU;AAAA,UAGVC,OAHU,eAGVA,OAHU;AAAA,UAIVC,mBAJU,eAIVA,mBAJU;AAAA,UAKVC,aALU,eAKVA,aALU;AAAA,UAMVC,cANU,eAMVA,cANU;AASZ,UAAMC,KAAK,GAAG,CACZ;AACEC,QAAAA,MAAM,EAAEL,OADV;AAEEM,QAAAA,IAAI,EAAE,oBAFR;AAGEC,QAAAA,WAAW,EACT,yEAJJ;AAKEC,QAAAA,KAAK,EAAE;AAAEC,UAAAA,YAAY,EAAE;AAAhB;AALT,OADY,EAQZ;AACEJ,QAAAA,MAAM,EAAEJ,mBADV;AAEEK,QAAAA,IAAI,EAAE,4BAFR;AAGEC,QAAAA,WAAW,EACT;AAJJ,OARY,EAcZ;AACEF,QAAAA,MAAM,EAAEH,aADV;AAEEI,QAAAA,IAAI,EAAE,oBAFR;AAGEC,QAAAA,WAAW,EACT;AAJJ,OAdY,EAoBZ;AACEF,QAAAA,MAAM,EAAEF,cADV;AAEEG,QAAAA,IAAI,EAAE,qBAFR;AAGEC,QAAAA,WAAW,EACT;AAJJ,OApBY,EA0BZ;AACEF,QAAAA,MAAM,EAAEV,IAAI,CAACe,KAAL,CAAWC,OAAX,CAAmBZ,OAAnB,EAA4B,OAA5B,CADV;AAEEO,QAAAA,IAAI,EAAE,0BAFR;AAGEC,QAAAA,WAAW,EACT;AAJJ,OA1BY,CAAd;AAkCA,aAAO,MAAC,IAAD,CAAM,KAAN;AAAY,QAAA,KAAK,EAAEH;AAAnB,QAAP;AACD;;;6BAEQ;AACP,aACE,MAAC,MAAD,QACE,kCADF,EAEE,MAAC,IAAD,QACE,MAAC,IAAD,CAAM,MAAN,QAAc,KAAKQ,WAAL,EAAd,CADF,EAEE,MAAC,IAAD,CAAM,MAAN,QACE,MAAC,cAAD,OADF,CAFF,CAFF,CADF;AAWD;;;;uGAxE4Bd,K;;;;;;AACrBe,gBAAAA,Q,GAAWrB,QAAQ,CAACM,KAAK,CAACgB,KAAN,CAAYC,OAAb,C;;uBAEHF,QAAQ,CAACG,OAAT,CAAiBC,UAAjB,GAA8BC,IAA9B,E;;;AAAhBC,gBAAAA,O;iDAEC;AACLlB,kBAAAA,mBAAmB,EAAEkB,OAAO,CAAC,CAAD,CADvB;AAELpB,kBAAAA,OAAO,EAAEoB,OAAO,CAAC,CAAD,CAFX;AAGLjB,kBAAAA,aAAa,EAAEiB,OAAO,CAAC,CAAD,CAHjB;AAILhB,kBAAAA,cAAc,EAAEgB,OAAO,CAAC,CAAD,CAJlB;AAKLnB,kBAAAA,OAAO,EAAEmB,OAAO,CAAC,CAAD;AALX,iB;;;;;;;;;;;;;;;;;;;EANgB7B,S;;AA4E3B,eAAeO,YAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Layout from \"../../components/Layout\";\nimport Campaign from \"../../ethereum/campaign\";\nimport { Card, Grid } from \"semantic-ui-react\";\nimport web3 from \"../../ethereum/web3\";\nimport ContributeForm from \"../../components/ContributeForm\";\n\nclass CampaignShow extends Component {\n  static async getInitialProps(props) {\n    const campaign = Campaign(props.query.address);\n\n    const summary = await campaign.methods.getSummary().call();\n\n    return {\n      minimumContribution: summary[0],\n      balance: summary[1],\n      requestsCount: summary[2],\n      approversCount: summary[3],\n      manager: summary[4],\n    };\n  }\n\n  renderCards() {\n    const {\n      balance,\n      manager,\n      minimumContribution,\n      requestsCount,\n      approversCount,\n    } = this.props;\n\n    const items = [\n      {\n        header: manager,\n        meta: \"Address of Manager\",\n        description:\n          \"The manager created this campaign and create requests to withdraw money\",\n        style: { overflowWrap: \"break-word\" },\n      },\n      {\n        header: minimumContribution,\n        meta: \"Minimum Contribution (wei)\",\n        description:\n          \"You must contribute at least this much wei to become an approver\",\n      },\n      {\n        header: requestsCount,\n        meta: \"Number of Requests\",\n        description:\n          \"A request tries to withdraw money from the contract. Requests must be approved by approvers.\",\n      },\n      {\n        header: approversCount,\n        meta: \"Number of Approvers\",\n        description:\n          \"Number of people who have already donated to this campaign\",\n      },\n      {\n        header: web3.utils.fromWei(balance, \"ether\"),\n        meta: \"Campaign Balance (ether)\",\n        description:\n          \"The balance is how much money this campaign has left to spend\",\n      },\n    ];\n\n    return <Card.Group items={items} />;\n  }\n\n  render() {\n    return (\n      <Layout>\n        <h3>Campaign Show</h3>\n        <Grid>\n          <Grid.Column>{this.renderCards()}</Grid.Column>\n          <Grid.Column>\n            <ContributeForm />\n          </Grid.Column>\n        </Grid>\n      </Layout>\n    );\n  }\n}\n\nexport default CampaignShow;\n"]},"metadata":{},"sourceType":"module"}