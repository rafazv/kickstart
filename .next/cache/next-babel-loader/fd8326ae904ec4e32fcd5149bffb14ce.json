{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport { Table, Button } from \"semantic-ui-react\";\nimport web3 from \"../ethereum/web3\";\nimport Campaign from \"../ethereum/campaign\";\nimport campaign from \"../ethereum/campaign\";\n\nclass RequestRow extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"onApprove\", async () => {\n      const campaign = Campaign(this.props.address);\n      const accounts = await web3.eth.getAccounts();\n      await campaign.methods.approveRequest(this.props.id).send({\n        from: accounts[0]\n      });\n    });\n\n    _defineProperty(this, \"onFinalize\", async () => {\n      const campaign = Campaign(this.props.address);\n      const accounts = await web3.eth.getAccounts();\n      await campaign.methods.finalizeRequest(this.props.id).send({\n        from: accounts[0]\n      });\n    });\n  }\n\n  render() {\n    const {\n      Row,\n      Cell\n    } = Table;\n    const {\n      id,\n      request,\n      approversCount\n    } = this.props;\n    return __jsx(Row, null, __jsx(Cell, null, id), __jsx(Cell, null, request.description), __jsx(Cell, null, web3.utils.fromWei(request.value, \"ether\")), __jsx(Cell, null, request.recipient), __jsx(Cell, null, request.approvalCount, \"/\", approversCount), __jsx(Cell, null, request.complete ? null : __jsx(Button, {\n      color: \"green\",\n      basic: true,\n      onClick: this.onApprove\n    }, \"Approve\")), __jsx(Cell, null, request.complete ? null : __jsx(Button, {\n      color: \"teal\",\n      basic: true,\n      onClick: this.onFinalize\n    }, \"Finalize\")));\n  }\n\n}\n\nexport default RequestRow;","map":{"version":3,"sources":["/home/rlima/Other Projects/Blockchain-Course/kickstart/components/RequestRow.js"],"names":["React","Component","Table","Button","web3","Campaign","campaign","RequestRow","props","address","accounts","eth","getAccounts","methods","approveRequest","id","send","from","finalizeRequest","render","Row","Cell","request","approversCount","description","utils","fromWei","value","recipient","approvalCount","complete","onApprove","onFinalize"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,mBAA9B;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,QAAP,MAAqB,sBAArB;;AAEA,MAAMC,UAAN,SAAyBN,SAAzB,CAAmC;AAAA;AAAA;;AAAA,uCACrB,YAAY;AACtB,YAAMK,QAAQ,GAAGD,QAAQ,CAAC,KAAKG,KAAL,CAAWC,OAAZ,CAAzB;AAEA,YAAMC,QAAQ,GAAG,MAAMN,IAAI,CAACO,GAAL,CAASC,WAAT,EAAvB;AACA,YAAMN,QAAQ,CAACO,OAAT,CAAiBC,cAAjB,CAAgC,KAAKN,KAAL,CAAWO,EAA3C,EAA+CC,IAA/C,CAAoD;AACxDC,QAAAA,IAAI,EAAEP,QAAQ,CAAC,CAAD;AAD0C,OAApD,CAAN;AAGD,KARgC;;AAAA,wCAUpB,YAAY;AACvB,YAAMJ,QAAQ,GAAGD,QAAQ,CAAC,KAAKG,KAAL,CAAWC,OAAZ,CAAzB;AAEA,YAAMC,QAAQ,GAAG,MAAMN,IAAI,CAACO,GAAL,CAASC,WAAT,EAAvB;AACA,YAAMN,QAAQ,CAACO,OAAT,CAAiBK,eAAjB,CAAiC,KAAKV,KAAL,CAAWO,EAA5C,EAAgDC,IAAhD,CAAqD;AACzDC,QAAAA,IAAI,EAAEP,QAAQ,CAAC,CAAD;AAD2C,OAArD,CAAN;AAGD,KAjBgC;AAAA;;AAmBjCS,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,GAAF;AAAOC,MAAAA;AAAP,QAAgBnB,KAAtB;AACA,UAAM;AAAEa,MAAAA,EAAF;AAAMO,MAAAA,OAAN;AAAeC,MAAAA;AAAf,QAAkC,KAAKf,KAA7C;AAEA,WACE,MAAC,GAAD,QACE,MAAC,IAAD,QAAOO,EAAP,CADF,EAEE,MAAC,IAAD,QAAOO,OAAO,CAACE,WAAf,CAFF,EAGE,MAAC,IAAD,QAAOpB,IAAI,CAACqB,KAAL,CAAWC,OAAX,CAAmBJ,OAAO,CAACK,KAA3B,EAAkC,OAAlC,CAAP,CAHF,EAIE,MAAC,IAAD,QAAOL,OAAO,CAACM,SAAf,CAJF,EAKE,MAAC,IAAD,QACGN,OAAO,CAACO,aADX,OAC2BN,cAD3B,CALF,EAQE,MAAC,IAAD,QACGD,OAAO,CAACQ,QAAR,GAAmB,IAAnB,GACC,MAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,OAAd;AAAsB,MAAA,KAAK,MAA3B;AAA4B,MAAA,OAAO,EAAE,KAAKC;AAA1C,iBAFJ,CARF,EAeE,MAAC,IAAD,QACGT,OAAO,CAACQ,QAAR,GAAmB,IAAnB,GACC,MAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,MAAd;AAAqB,MAAA,KAAK,MAA1B;AAA2B,MAAA,OAAO,EAAE,KAAKE;AAAzC,kBAFJ,CAfF,CADF;AAyBD;;AAhDgC;;AAmDnC,eAAezB,UAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { Table, Button } from \"semantic-ui-react\";\nimport web3 from \"../ethereum/web3\";\nimport Campaign from \"../ethereum/campaign\";\nimport campaign from \"../ethereum/campaign\";\n\nclass RequestRow extends Component {\n  onApprove = async () => {\n    const campaign = Campaign(this.props.address);\n\n    const accounts = await web3.eth.getAccounts();\n    await campaign.methods.approveRequest(this.props.id).send({\n      from: accounts[0],\n    });\n  };\n\n  onFinalize = async () => {\n    const campaign = Campaign(this.props.address);\n\n    const accounts = await web3.eth.getAccounts();\n    await campaign.methods.finalizeRequest(this.props.id).send({\n      from: accounts[0],\n    });\n  };\n\n  render() {\n    const { Row, Cell } = Table;\n    const { id, request, approversCount } = this.props;\n\n    return (\n      <Row>\n        <Cell>{id}</Cell>\n        <Cell>{request.description}</Cell>\n        <Cell>{web3.utils.fromWei(request.value, \"ether\")}</Cell>\n        <Cell>{request.recipient}</Cell>\n        <Cell>\n          {request.approvalCount}/{approversCount}\n        </Cell>\n        <Cell>\n          {request.complete ? null : (\n            <Button color=\"green\" basic onClick={this.onApprove}>\n              Approve\n            </Button>\n          )}\n        </Cell>\n        <Cell>\n          {request.complete ? null : (\n            <Button color=\"teal\" basic onClick={this.onFinalize}>\n              Finalize\n            </Button>\n          )}\n        </Cell>\n      </Row>\n    );\n  }\n}\n\nexport default RequestRow;\n"]},"metadata":{},"sourceType":"module"}