{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport { Form, Input, Button } from \"semantic-ui-react\";\nimport Campaign from \"../ethereum/campaign\";\nimport web3 from \"../ethereum/web3\";\n\nclass ContributeForm extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      value: \"\",\n      errorMessage: \"\",\n      loading: false\n    });\n\n    _defineProperty(this, \"onSubmit\", async e => {\n      e.preventDefault();\n      const campaign = Campaign(this.props.address);\n\n      try {\n        const accounts = await web3.eth.getAccounts();\n        await campaign.methods.contribute().send({\n          from: accounts[0],\n          value: web3.utils.toWei(this.state.value, \"ether\")\n        });\n      } catch (err) {}\n    });\n  }\n\n  render() {\n    return __jsx(Form, {\n      onSubmit: this.onSubmit\n    }, __jsx(Form.Field, null, __jsx(\"label\", null, \"Amount to Contribute\"), __jsx(Input, {\n      label: \"ether\",\n      labelPosition: \"right\",\n      value: this.state.value,\n      onChange: e => this.setState({\n        value: e.target.value\n      })\n    })), __jsx(Button, {\n      primary: true\n    }, \"Contribute!\"));\n  }\n\n}\n\nexport default ContributeForm;","map":{"version":3,"sources":["/home/rlima/Other Projects/Blockchain-Course/kickstart/components/ContributeForm.js"],"names":["React","Component","Form","Input","Button","Campaign","web3","ContributeForm","value","errorMessage","loading","e","preventDefault","campaign","props","address","accounts","eth","getAccounts","methods","contribute","send","from","utils","toWei","state","err","render","onSubmit","setState","target"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,MAAtB,QAAoC,mBAApC;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,IAAP,MAAiB,kBAAjB;;AAEA,MAAMC,cAAN,SAA6BN,SAA7B,CAAuC;AAAA;AAAA;;AAAA,mCAC7B;AACNO,MAAAA,KAAK,EAAE,EADD;AAENC,MAAAA,YAAY,EAAE,EAFR;AAGNC,MAAAA,OAAO,EAAE;AAHH,KAD6B;;AAAA,sCAO1B,MAAOC,CAAP,IAAa;AACtBA,MAAAA,CAAC,CAACC,cAAF;AAEA,YAAMC,QAAQ,GAAGR,QAAQ,CAAC,KAAKS,KAAL,CAAWC,OAAZ,CAAzB;;AAEA,UAAI;AACF,cAAMC,QAAQ,GAAG,MAAMV,IAAI,CAACW,GAAL,CAASC,WAAT,EAAvB;AACA,cAAML,QAAQ,CAACM,OAAT,CAAiBC,UAAjB,GAA8BC,IAA9B,CAAmC;AACvCC,UAAAA,IAAI,EAAEN,QAAQ,CAAC,CAAD,CADyB;AAEvCR,UAAAA,KAAK,EAAEF,IAAI,CAACiB,KAAL,CAAWC,KAAX,CAAiB,KAAKC,KAAL,CAAWjB,KAA5B,EAAmC,OAAnC;AAFgC,SAAnC,CAAN;AAID,OAND,CAME,OAAOkB,GAAP,EAAY,CAAE;AACjB,KAnBoC;AAAA;;AAqBrCC,EAAAA,MAAM,GAAG;AACP,WACE,MAAC,IAAD;AAAM,MAAA,QAAQ,EAAE,KAAKC;AAArB,OACE,MAAC,IAAD,CAAM,KAAN,QACE,4CADF,EAEE,MAAC,KAAD;AACE,MAAA,KAAK,EAAC,OADR;AAEE,MAAA,aAAa,EAAC,OAFhB;AAGE,MAAA,KAAK,EAAE,KAAKH,KAAL,CAAWjB,KAHpB;AAIE,MAAA,QAAQ,EAAGG,CAAD,IAAO,KAAKkB,QAAL,CAAc;AAAErB,QAAAA,KAAK,EAAEG,CAAC,CAACmB,MAAF,CAAStB;AAAlB,OAAd;AAJnB,MAFF,CADF,EAUE,MAAC,MAAD;AAAQ,MAAA,OAAO;AAAf,qBAVF,CADF;AAcD;;AApCoC;;AAuCvC,eAAeD,cAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { Form, Input, Button } from \"semantic-ui-react\";\nimport Campaign from \"../ethereum/campaign\";\nimport web3 from \"../ethereum/web3\";\n\nclass ContributeForm extends Component {\n  state = {\n    value: \"\",\n    errorMessage: \"\",\n    loading: false,\n  };\n\n  onSubmit = async (e) => {\n    e.preventDefault();\n\n    const campaign = Campaign(this.props.address);\n\n    try {\n      const accounts = await web3.eth.getAccounts();\n      await campaign.methods.contribute().send({\n        from: accounts[0],\n        value: web3.utils.toWei(this.state.value, \"ether\"),\n      });\n    } catch (err) {}\n  };\n\n  render() {\n    return (\n      <Form onSubmit={this.onSubmit}>\n        <Form.Field>\n          <label>Amount to Contribute</label>\n          <Input\n            label=\"ether\"\n            labelPosition=\"right\"\n            value={this.state.value}\n            onChange={(e) => this.setState({ value: e.target.value })}\n          />\n        </Form.Field>\n        <Button primary>Contribute!</Button>\n      </Form>\n    );\n  }\n}\n\nexport default ContributeForm;\n"]},"metadata":{},"sourceType":"module"}